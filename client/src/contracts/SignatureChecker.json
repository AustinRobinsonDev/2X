{
  "contractName": "SignatureChecker",
  "abi": [],
  "metadata": "{\"compiler\":{\"version\":\"0.8.0+commit.c7dfd78e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Signature verification helper: Provide a single mechanism to verify both private-key (EOA) ECDSA signature and ERC1271 contract sigantures. Using this instead of ECDSA.recover in your contract will make them compatible with smart contract wallets such as Argent and Gnosis. Note: unlike ECDSA signatures, contract signature's are revocable, and the outcome of this function can thus change through time. It could return true at block N and false at block N+1 (or the opposite).\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"/Users/jaredborders/Documents/Work/Blockchain/Truffle-2X/contracts/openzeppelin-solidity/contracts/utils/cryptography/SignatureChecker.sol\":\"SignatureChecker\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"/Users/jaredborders/Documents/Work/Blockchain/Truffle-2X/contracts/openzeppelin-solidity/contracts/interfaces/IERC1271.sol\":{\"keccak256\":\"0x61520ca98112ae4bb76733f7fc41fdb7846f3e9d866a86eebbe075155b7b94df\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f7bbd507fed94393ea392e341945778947fdd0d33274037a3800adb1cf2ae6d4\",\"dweb:/ipfs/QmY8PDEXNHTN29TwXXC61ubNsfaSed3nRces6JQ82a3xEy\"]},\"/Users/jaredborders/Documents/Work/Blockchain/Truffle-2X/contracts/openzeppelin-solidity/contracts/utils/Address.sol\":{\"keccak256\":\"0x069b2631bb5b5193a58ccf7a06266c7361bd2c20095667af4402817605627f45\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a4c96fafff76deda5697c3c5c98cade6e6e1b178254544c106bf360c079ce4e\",\"dweb:/ipfs/QmXmxubE3jnatFgZuN8ay1VV6hZ8WRmhvUjNpeVjki15HX\"]},\"/Users/jaredborders/Documents/Work/Blockchain/Truffle-2X/contracts/openzeppelin-solidity/contracts/utils/cryptography/ECDSA.sol\":{\"keccak256\":\"0x5ae777a388a268ff2be1c03c46e39bfc0399c9da103fb979c765373d7d86a4ef\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c297a4354ddeab8826d3dd431581d2dd35c721aba1a28eed875e49d2cebfb3d4\",\"dweb:/ipfs/QmYMVy59Fc9u6eauDPEWV1R4zqYJXW9V9G1s2v88EnqDkK\"]},\"/Users/jaredborders/Documents/Work/Blockchain/Truffle-2X/contracts/openzeppelin-solidity/contracts/utils/cryptography/SignatureChecker.sol\":{\"keccak256\":\"0xa51e99b6324fb0806083a7d70724b8b5fc9a3d6a0fa49f64841deee18da53d3b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://84ee88a689d9bd2d460b9f8e2fa58bd4049768c90813028a27a337cde6175608\",\"dweb:/ipfs/QmekrVydJnmwCPz8GwvKb9qdTBgSHvSjYneeCuHRocCJnS\"]}},\"version\":1}",
  "bytecode": "0x60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212207dbbf60d2f475ccde1028fdcc42ec132d27178a04ea974e994cc063d95f83fc564736f6c63430008000033",
  "deployedBytecode": "0x73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212207dbbf60d2f475ccde1028fdcc42ec132d27178a04ea974e994cc063d95f83fc564736f6c63430008000033",
  "immutableReferences": {},
  "generatedSources": [],
  "deployedGeneratedSources": [],
  "sourceMap": "655:526:139:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;",
  "deployedSourceMap": "655:526:139:-:0;;;;;;;;",
  "source": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.0;\n\nimport \"./ECDSA.sol\";\nimport \"../Address.sol\";\nimport \"../../interfaces/IERC1271.sol\";\n\n/**\n * @dev Signature verification helper: Provide a single mechanism to verify both private-key (EOA) ECDSA signature and\n * ERC1271 contract sigantures. Using this instead of ECDSA.recover in your contract will make them compatible with\n * smart contract wallets such as Argent and Gnosis.\n *\n * Note: unlike ECDSA signatures, contract signature's are revocable, and the outcome of this function can thus change\n * through time. It could return true at block N and false at block N+1 (or the opposite).\n */\nlibrary SignatureChecker {\n    function isValidSignatureNow(address signer, bytes32 hash, bytes memory signature) internal view returns (bool) {\n        if (Address.isContract(signer)) {\n            try IERC1271(signer).isValidSignature(hash, signature) returns (bytes4 magicValue) {\n                return magicValue == IERC1271(signer).isValidSignature.selector;\n            } catch {\n                return false;\n            }\n        } else {\n            return ECDSA.recover(hash, signature) == signer;\n        }\n    }\n}\n",
  "sourcePath": "/Users/jaredborders/Documents/Work/Blockchain/Truffle-2X/contracts/openzeppelin-solidity/contracts/utils/cryptography/SignatureChecker.sol",
  "ast": {
    "absolutePath": "/Users/jaredborders/Documents/Work/Blockchain/Truffle-2X/contracts/openzeppelin-solidity/contracts/utils/cryptography/SignatureChecker.sol",
    "exportedSymbols": {
      "Address": [
        16048
      ],
      "ECDSA": [
        16730
      ],
      "IERC1271": [
        2279
      ],
      "SignatureChecker": [
        16860
      ]
    },
    "id": 16861,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 16803,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "33:23:139"
      },
      {
        "absolutePath": "/Users/jaredborders/Documents/Work/Blockchain/Truffle-2X/contracts/openzeppelin-solidity/contracts/utils/cryptography/ECDSA.sol",
        "file": "./ECDSA.sol",
        "id": 16804,
        "nodeType": "ImportDirective",
        "scope": 16861,
        "sourceUnit": 16731,
        "src": "58:21:139",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/jaredborders/Documents/Work/Blockchain/Truffle-2X/contracts/openzeppelin-solidity/contracts/utils/Address.sol",
        "file": "../Address.sol",
        "id": 16805,
        "nodeType": "ImportDirective",
        "scope": 16861,
        "sourceUnit": 16049,
        "src": "80:24:139",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/jaredborders/Documents/Work/Blockchain/Truffle-2X/contracts/openzeppelin-solidity/contracts/interfaces/IERC1271.sol",
        "file": "../../interfaces/IERC1271.sol",
        "id": 16806,
        "nodeType": "ImportDirective",
        "scope": 16861,
        "sourceUnit": 2280,
        "src": "105:39:139",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "library",
        "documentation": {
          "id": 16807,
          "nodeType": "StructuredDocumentation",
          "src": "146:508:139",
          "text": " @dev Signature verification helper: Provide a single mechanism to verify both private-key (EOA) ECDSA signature and\n ERC1271 contract sigantures. Using this instead of ECDSA.recover in your contract will make them compatible with\n smart contract wallets such as Argent and Gnosis.\n Note: unlike ECDSA signatures, contract signature's are revocable, and the outcome of this function can thus change\n through time. It could return true at block N and false at block N+1 (or the opposite)."
        },
        "fullyImplemented": true,
        "id": 16860,
        "linearizedBaseContracts": [
          16860
        ],
        "name": "SignatureChecker",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 16858,
              "nodeType": "Block",
              "src": "798:381:139",
              "statements": [
                {
                  "condition": {
                    "arguments": [
                      {
                        "id": 16820,
                        "name": "signer",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 16809,
                        "src": "831:6:139",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 16818,
                        "name": "Address",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 16048,
                        "src": "812:7:139",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_Address_$16048_$",
                          "typeString": "type(library Address)"
                        }
                      },
                      "id": 16819,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "isContract",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 15772,
                      "src": "812:18:139",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
                        "typeString": "function (address) view returns (bool)"
                      }
                    },
                    "id": 16821,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "812:26:139",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 16856,
                    "nodeType": "Block",
                    "src": "1101:72:139",
                    "statements": [
                      {
                        "expression": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 16854,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "arguments": [
                              {
                                "id": 16850,
                                "name": "hash",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 16811,
                                "src": "1136:4:139",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              },
                              {
                                "id": 16851,
                                "name": "signature",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 16813,
                                "src": "1142:9:139",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                },
                                {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              ],
                              "expression": {
                                "id": 16848,
                                "name": "ECDSA",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 16730,
                                "src": "1122:5:139",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_ECDSA_$16730_$",
                                  "typeString": "type(library ECDSA)"
                                }
                              },
                              "id": 16849,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "recover",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 16635,
                              "src": "1122:13:139",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_bytes32_$_t_bytes_memory_ptr_$returns$_t_address_$",
                                "typeString": "function (bytes32,bytes memory) pure returns (address)"
                              }
                            },
                            "id": 16852,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1122:30:139",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "id": 16853,
                            "name": "signer",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 16809,
                            "src": "1156:6:139",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "1122:40:139",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "functionReturnParameters": 16817,
                        "id": 16855,
                        "nodeType": "Return",
                        "src": "1115:47:139"
                      }
                    ]
                  },
                  "id": 16857,
                  "nodeType": "IfStatement",
                  "src": "808:365:139",
                  "trueBody": {
                    "id": 16847,
                    "nodeType": "Block",
                    "src": "840:255:139",
                    "statements": [
                      {
                        "clauses": [
                          {
                            "block": {
                              "id": 16840,
                              "nodeType": "Block",
                              "src": "937:96:139",
                              "statements": [
                                {
                                  "expression": {
                                    "commonType": {
                                      "typeIdentifier": "t_bytes4",
                                      "typeString": "bytes4"
                                    },
                                    "id": 16838,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "id": 16832,
                                      "name": "magicValue",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 16830,
                                      "src": "962:10:139",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bytes4",
                                        "typeString": "bytes4"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "==",
                                    "rightExpression": {
                                      "expression": {
                                        "expression": {
                                          "arguments": [
                                            {
                                              "id": 16834,
                                              "name": "signer",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 16809,
                                              "src": "985:6:139",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_address",
                                                "typeString": "address"
                                              }
                                            }
                                          ],
                                          "expression": {
                                            "argumentTypes": [
                                              {
                                                "typeIdentifier": "t_address",
                                                "typeString": "address"
                                              }
                                            ],
                                            "id": 16833,
                                            "name": "IERC1271",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 2279,
                                            "src": "976:8:139",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_type$_t_contract$_IERC1271_$2279_$",
                                              "typeString": "type(contract IERC1271)"
                                            }
                                          },
                                          "id": 16835,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "kind": "typeConversion",
                                          "lValueRequested": false,
                                          "names": [],
                                          "nodeType": "FunctionCall",
                                          "src": "976:16:139",
                                          "tryCall": false,
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_contract$_IERC1271_$2279",
                                            "typeString": "contract IERC1271"
                                          }
                                        },
                                        "id": 16836,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberName": "isValidSignature",
                                        "nodeType": "MemberAccess",
                                        "referencedDeclaration": 2278,
                                        "src": "976:33:139",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_function_external_view$_t_bytes32_$_t_bytes_memory_ptr_$returns$_t_bytes4_$",
                                          "typeString": "function (bytes32,bytes memory) view external returns (bytes4)"
                                        }
                                      },
                                      "id": 16837,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "selector",
                                      "nodeType": "MemberAccess",
                                      "src": "976:42:139",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bytes4",
                                        "typeString": "bytes4"
                                      }
                                    },
                                    "src": "962:56:139",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  },
                                  "functionReturnParameters": 16817,
                                  "id": 16839,
                                  "nodeType": "Return",
                                  "src": "955:63:139"
                                }
                              ]
                            },
                            "errorName": "",
                            "id": 16841,
                            "nodeType": "TryCatchClause",
                            "parameters": {
                              "id": 16831,
                              "nodeType": "ParameterList",
                              "parameters": [
                                {
                                  "constant": false,
                                  "id": 16830,
                                  "mutability": "mutable",
                                  "name": "magicValue",
                                  "nodeType": "VariableDeclaration",
                                  "scope": 16841,
                                  "src": "918:17:139",
                                  "stateVariable": false,
                                  "storageLocation": "default",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes4",
                                    "typeString": "bytes4"
                                  },
                                  "typeName": {
                                    "id": 16829,
                                    "name": "bytes4",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "918:6:139",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes4",
                                      "typeString": "bytes4"
                                    }
                                  },
                                  "visibility": "internal"
                                }
                              ],
                              "src": "917:19:139"
                            },
                            "src": "909:124:139"
                          },
                          {
                            "block": {
                              "id": 16844,
                              "nodeType": "Block",
                              "src": "1040:45:139",
                              "statements": [
                                {
                                  "expression": {
                                    "hexValue": "66616c7365",
                                    "id": 16842,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "bool",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "1065:5:139",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    },
                                    "value": "false"
                                  },
                                  "functionReturnParameters": 16817,
                                  "id": 16843,
                                  "nodeType": "Return",
                                  "src": "1058:12:139"
                                }
                              ]
                            },
                            "errorName": "",
                            "id": 16845,
                            "nodeType": "TryCatchClause",
                            "src": "1034:51:139"
                          }
                        ],
                        "externalCall": {
                          "arguments": [
                            {
                              "id": 16826,
                              "name": "hash",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 16811,
                              "src": "892:4:139",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            {
                              "id": 16827,
                              "name": "signature",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 16813,
                              "src": "898:9:139",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              },
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            ],
                            "expression": {
                              "arguments": [
                                {
                                  "id": 16823,
                                  "name": "signer",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 16809,
                                  "src": "867:6:139",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 16822,
                                "name": "IERC1271",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2279,
                                "src": "858:8:139",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IERC1271_$2279_$",
                                  "typeString": "type(contract IERC1271)"
                                }
                              },
                              "id": 16824,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "858:16:139",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC1271_$2279",
                                "typeString": "contract IERC1271"
                              }
                            },
                            "id": 16825,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "isValidSignature",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2278,
                            "src": "858:33:139",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_bytes32_$_t_bytes_memory_ptr_$returns$_t_bytes4_$",
                              "typeString": "function (bytes32,bytes memory) view external returns (bytes4)"
                            }
                          },
                          "id": 16828,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "858:50:139",
                          "tryCall": true,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          }
                        },
                        "id": 16846,
                        "nodeType": "TryStatement",
                        "src": "854:231:139"
                      }
                    ]
                  }
                }
              ]
            },
            "id": 16859,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "isValidSignatureNow",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 16814,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 16809,
                  "mutability": "mutable",
                  "name": "signer",
                  "nodeType": "VariableDeclaration",
                  "scope": 16859,
                  "src": "715:14:139",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 16808,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "715:7:139",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 16811,
                  "mutability": "mutable",
                  "name": "hash",
                  "nodeType": "VariableDeclaration",
                  "scope": 16859,
                  "src": "731:12:139",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 16810,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "731:7:139",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 16813,
                  "mutability": "mutable",
                  "name": "signature",
                  "nodeType": "VariableDeclaration",
                  "scope": 16859,
                  "src": "745:22:139",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 16812,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "745:5:139",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "714:54:139"
            },
            "returnParameters": {
              "id": 16817,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 16816,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 16859,
                  "src": "792:4:139",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 16815,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "792:4:139",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "791:6:139"
            },
            "scope": 16860,
            "src": "686:493:139",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "internal"
          }
        ],
        "scope": 16861,
        "src": "655:526:139"
      }
    ],
    "src": "33:1149:139"
  },
  "legacyAST": {
    "absolutePath": "/Users/jaredborders/Documents/Work/Blockchain/Truffle-2X/contracts/openzeppelin-solidity/contracts/utils/cryptography/SignatureChecker.sol",
    "exportedSymbols": {
      "Address": [
        16048
      ],
      "ECDSA": [
        16730
      ],
      "IERC1271": [
        2279
      ],
      "SignatureChecker": [
        16860
      ]
    },
    "id": 16861,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 16803,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "33:23:139"
      },
      {
        "absolutePath": "/Users/jaredborders/Documents/Work/Blockchain/Truffle-2X/contracts/openzeppelin-solidity/contracts/utils/cryptography/ECDSA.sol",
        "file": "./ECDSA.sol",
        "id": 16804,
        "nodeType": "ImportDirective",
        "scope": 16861,
        "sourceUnit": 16731,
        "src": "58:21:139",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/jaredborders/Documents/Work/Blockchain/Truffle-2X/contracts/openzeppelin-solidity/contracts/utils/Address.sol",
        "file": "../Address.sol",
        "id": 16805,
        "nodeType": "ImportDirective",
        "scope": 16861,
        "sourceUnit": 16049,
        "src": "80:24:139",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/jaredborders/Documents/Work/Blockchain/Truffle-2X/contracts/openzeppelin-solidity/contracts/interfaces/IERC1271.sol",
        "file": "../../interfaces/IERC1271.sol",
        "id": 16806,
        "nodeType": "ImportDirective",
        "scope": 16861,
        "sourceUnit": 2280,
        "src": "105:39:139",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "library",
        "documentation": {
          "id": 16807,
          "nodeType": "StructuredDocumentation",
          "src": "146:508:139",
          "text": " @dev Signature verification helper: Provide a single mechanism to verify both private-key (EOA) ECDSA signature and\n ERC1271 contract sigantures. Using this instead of ECDSA.recover in your contract will make them compatible with\n smart contract wallets such as Argent and Gnosis.\n Note: unlike ECDSA signatures, contract signature's are revocable, and the outcome of this function can thus change\n through time. It could return true at block N and false at block N+1 (or the opposite)."
        },
        "fullyImplemented": true,
        "id": 16860,
        "linearizedBaseContracts": [
          16860
        ],
        "name": "SignatureChecker",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 16858,
              "nodeType": "Block",
              "src": "798:381:139",
              "statements": [
                {
                  "condition": {
                    "arguments": [
                      {
                        "id": 16820,
                        "name": "signer",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 16809,
                        "src": "831:6:139",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 16818,
                        "name": "Address",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 16048,
                        "src": "812:7:139",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_Address_$16048_$",
                          "typeString": "type(library Address)"
                        }
                      },
                      "id": 16819,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "isContract",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 15772,
                      "src": "812:18:139",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
                        "typeString": "function (address) view returns (bool)"
                      }
                    },
                    "id": 16821,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "812:26:139",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 16856,
                    "nodeType": "Block",
                    "src": "1101:72:139",
                    "statements": [
                      {
                        "expression": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 16854,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "arguments": [
                              {
                                "id": 16850,
                                "name": "hash",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 16811,
                                "src": "1136:4:139",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              },
                              {
                                "id": 16851,
                                "name": "signature",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 16813,
                                "src": "1142:9:139",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                },
                                {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              ],
                              "expression": {
                                "id": 16848,
                                "name": "ECDSA",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 16730,
                                "src": "1122:5:139",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_ECDSA_$16730_$",
                                  "typeString": "type(library ECDSA)"
                                }
                              },
                              "id": 16849,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "recover",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 16635,
                              "src": "1122:13:139",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_bytes32_$_t_bytes_memory_ptr_$returns$_t_address_$",
                                "typeString": "function (bytes32,bytes memory) pure returns (address)"
                              }
                            },
                            "id": 16852,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1122:30:139",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "id": 16853,
                            "name": "signer",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 16809,
                            "src": "1156:6:139",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "1122:40:139",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "functionReturnParameters": 16817,
                        "id": 16855,
                        "nodeType": "Return",
                        "src": "1115:47:139"
                      }
                    ]
                  },
                  "id": 16857,
                  "nodeType": "IfStatement",
                  "src": "808:365:139",
                  "trueBody": {
                    "id": 16847,
                    "nodeType": "Block",
                    "src": "840:255:139",
                    "statements": [
                      {
                        "clauses": [
                          {
                            "block": {
                              "id": 16840,
                              "nodeType": "Block",
                              "src": "937:96:139",
                              "statements": [
                                {
                                  "expression": {
                                    "commonType": {
                                      "typeIdentifier": "t_bytes4",
                                      "typeString": "bytes4"
                                    },
                                    "id": 16838,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "id": 16832,
                                      "name": "magicValue",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 16830,
                                      "src": "962:10:139",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bytes4",
                                        "typeString": "bytes4"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "==",
                                    "rightExpression": {
                                      "expression": {
                                        "expression": {
                                          "arguments": [
                                            {
                                              "id": 16834,
                                              "name": "signer",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 16809,
                                              "src": "985:6:139",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_address",
                                                "typeString": "address"
                                              }
                                            }
                                          ],
                                          "expression": {
                                            "argumentTypes": [
                                              {
                                                "typeIdentifier": "t_address",
                                                "typeString": "address"
                                              }
                                            ],
                                            "id": 16833,
                                            "name": "IERC1271",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 2279,
                                            "src": "976:8:139",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_type$_t_contract$_IERC1271_$2279_$",
                                              "typeString": "type(contract IERC1271)"
                                            }
                                          },
                                          "id": 16835,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "kind": "typeConversion",
                                          "lValueRequested": false,
                                          "names": [],
                                          "nodeType": "FunctionCall",
                                          "src": "976:16:139",
                                          "tryCall": false,
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_contract$_IERC1271_$2279",
                                            "typeString": "contract IERC1271"
                                          }
                                        },
                                        "id": 16836,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberName": "isValidSignature",
                                        "nodeType": "MemberAccess",
                                        "referencedDeclaration": 2278,
                                        "src": "976:33:139",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_function_external_view$_t_bytes32_$_t_bytes_memory_ptr_$returns$_t_bytes4_$",
                                          "typeString": "function (bytes32,bytes memory) view external returns (bytes4)"
                                        }
                                      },
                                      "id": 16837,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "selector",
                                      "nodeType": "MemberAccess",
                                      "src": "976:42:139",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bytes4",
                                        "typeString": "bytes4"
                                      }
                                    },
                                    "src": "962:56:139",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  },
                                  "functionReturnParameters": 16817,
                                  "id": 16839,
                                  "nodeType": "Return",
                                  "src": "955:63:139"
                                }
                              ]
                            },
                            "errorName": "",
                            "id": 16841,
                            "nodeType": "TryCatchClause",
                            "parameters": {
                              "id": 16831,
                              "nodeType": "ParameterList",
                              "parameters": [
                                {
                                  "constant": false,
                                  "id": 16830,
                                  "mutability": "mutable",
                                  "name": "magicValue",
                                  "nodeType": "VariableDeclaration",
                                  "scope": 16841,
                                  "src": "918:17:139",
                                  "stateVariable": false,
                                  "storageLocation": "default",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes4",
                                    "typeString": "bytes4"
                                  },
                                  "typeName": {
                                    "id": 16829,
                                    "name": "bytes4",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "918:6:139",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes4",
                                      "typeString": "bytes4"
                                    }
                                  },
                                  "visibility": "internal"
                                }
                              ],
                              "src": "917:19:139"
                            },
                            "src": "909:124:139"
                          },
                          {
                            "block": {
                              "id": 16844,
                              "nodeType": "Block",
                              "src": "1040:45:139",
                              "statements": [
                                {
                                  "expression": {
                                    "hexValue": "66616c7365",
                                    "id": 16842,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "bool",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "1065:5:139",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    },
                                    "value": "false"
                                  },
                                  "functionReturnParameters": 16817,
                                  "id": 16843,
                                  "nodeType": "Return",
                                  "src": "1058:12:139"
                                }
                              ]
                            },
                            "errorName": "",
                            "id": 16845,
                            "nodeType": "TryCatchClause",
                            "src": "1034:51:139"
                          }
                        ],
                        "externalCall": {
                          "arguments": [
                            {
                              "id": 16826,
                              "name": "hash",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 16811,
                              "src": "892:4:139",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            {
                              "id": 16827,
                              "name": "signature",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 16813,
                              "src": "898:9:139",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              },
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            ],
                            "expression": {
                              "arguments": [
                                {
                                  "id": 16823,
                                  "name": "signer",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 16809,
                                  "src": "867:6:139",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 16822,
                                "name": "IERC1271",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2279,
                                "src": "858:8:139",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IERC1271_$2279_$",
                                  "typeString": "type(contract IERC1271)"
                                }
                              },
                              "id": 16824,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "858:16:139",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC1271_$2279",
                                "typeString": "contract IERC1271"
                              }
                            },
                            "id": 16825,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "isValidSignature",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2278,
                            "src": "858:33:139",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_bytes32_$_t_bytes_memory_ptr_$returns$_t_bytes4_$",
                              "typeString": "function (bytes32,bytes memory) view external returns (bytes4)"
                            }
                          },
                          "id": 16828,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "858:50:139",
                          "tryCall": true,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          }
                        },
                        "id": 16846,
                        "nodeType": "TryStatement",
                        "src": "854:231:139"
                      }
                    ]
                  }
                }
              ]
            },
            "id": 16859,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "isValidSignatureNow",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 16814,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 16809,
                  "mutability": "mutable",
                  "name": "signer",
                  "nodeType": "VariableDeclaration",
                  "scope": 16859,
                  "src": "715:14:139",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 16808,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "715:7:139",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 16811,
                  "mutability": "mutable",
                  "name": "hash",
                  "nodeType": "VariableDeclaration",
                  "scope": 16859,
                  "src": "731:12:139",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 16810,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "731:7:139",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 16813,
                  "mutability": "mutable",
                  "name": "signature",
                  "nodeType": "VariableDeclaration",
                  "scope": 16859,
                  "src": "745:22:139",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 16812,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "745:5:139",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "714:54:139"
            },
            "returnParameters": {
              "id": 16817,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 16816,
                  "mutability": "mutable",
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 16859,
                  "src": "792:4:139",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 16815,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "792:4:139",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "791:6:139"
            },
            "scope": 16860,
            "src": "686:493:139",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "internal"
          }
        ],
        "scope": 16861,
        "src": "655:526:139"
      }
    ],
    "src": "33:1149:139"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.0+commit.c7dfd78e.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.3.4",
  "updatedAt": "2021-04-16T22:50:41.042Z",
  "devdoc": {
    "details": "Signature verification helper: Provide a single mechanism to verify both private-key (EOA) ECDSA signature and ERC1271 contract sigantures. Using this instead of ECDSA.recover in your contract will make them compatible with smart contract wallets such as Argent and Gnosis. Note: unlike ECDSA signatures, contract signature's are revocable, and the outcome of this function can thus change through time. It could return true at block N and false at block N+1 (or the opposite).",
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  }
}
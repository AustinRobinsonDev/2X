{
    "contractName": "RandomNumberConsumer",
    "abi": [
        {
            "inputs": [
                {
                    "internalType": "address",
                    "name": "_factory",
                    "type": "address"
                }
            ],
            "stateMutability": "nonpayable",
            "type": "constructor"
        },
        {
            "inputs": [],
            "name": "factory",
            "outputs": [
                {
                    "internalType": "address",
                    "name": "",
                    "type": "address"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "getAmountOfLink",
            "outputs": [
                {
                    "internalType": "uint256",
                    "name": "amount",
                    "type": "uint256"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "uint256",
                    "name": "userProvidedSeed",
                    "type": "uint256"
                }
            ],
            "name": "getRandomNumber",
            "outputs": [
                {
                    "internalType": "bytes32",
                    "name": "requestId",
                    "type": "bytes32"
                }
            ],
            "stateMutability": "nonpayable",
            "type": "function"
        },
        {
            "inputs": [],
            "name": "randomResult",
            "outputs": [
                {
                    "internalType": "uint256",
                    "name": "",
                    "type": "uint256"
                }
            ],
            "stateMutability": "view",
            "type": "function"
        },
        {
            "inputs": [
                {
                    "internalType": "bytes32",
                    "name": "requestId",
                    "type": "bytes32"
                },
                {
                    "internalType": "uint256",
                    "name": "randomness",
                    "type": "uint256"
                }
            ],
            "name": "rawFulfillRandomness",
            "outputs": [],
            "stateMutability": "nonpayable",
            "type": "function"
        }
    ],
    "metadata": "{\"compiler\":{\"version\":\"0.8.0+commit.c7dfd78e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_factory\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"factory\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getAmountOfLink\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"userProvidedSeed\",\"type\":\"uint256\"}],\"name\":\"getRandomNumber\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"requestId\",\"type\":\"bytes32\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"randomResult\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"requestId\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"randomness\",\"type\":\"uint256\"}],\"name\":\"rawFulfillRandomness\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"getAmountOfLink()\":{\"returns\":{\"amount\":\"of LINK contract has\"}}},\"title\":\"RandomNumberConsumer - Random number generator\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"constructor\":{\"notice\":\"Constructor inherits VRFConsumerBase  Network: Kovan Chainlink VRF Coordinator address: 0xdD3782915140c8f3b190B5D67eAc6dc5760C46E9 LINK token address:                0xa36085F69e2889c224210F603D836748e7dC0088 Key Hash: 0x6c3699283bda56ad74f6b855546325b68d482e983852a7a82979cc4807b641f4\"},\"getRandomNumber(uint256)\":{\"notice\":\"Requests randomness from a user-provided seed************************************************************************************                                    STOP!                                         *          THIS FUNCTION WILL FAIL IF THIS CONTRACT DOES NOT OWN LINK               *         ----------------------------------------------------------               *         Learn how to obtain testnet LINK and fund this contract:                 *         ------- https://docs.chain.link/docs/acquire-link --------               *         ---- https://docs.chain.link/docs/fund-your-contract -----               *                                                                                  ************************************************************************************\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"/Users/jaredborders/Documents/Work/Blockchain/2X/contracts/RandomNumberConsumer.sol\":\"RandomNumberConsumer\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"/Users/jaredborders/Documents/Work/Blockchain/2X/contracts/RandomNumberConsumer.sol\":{\"keccak256\":\"0x5d538f29dfac8e64c19fbc39220f241690ae054f84cda1680c045d17894566b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3ac720c9e0012b890815457bc76baf5c7cc323eeac52cacaec1c3db429c23bd1\",\"dweb:/ipfs/QmS1RbhnoQKHHq863Md4m15mBeBvZZu5RiynpGwqXN32SB\"]},\"/Users/jaredborders/Documents/Work/Blockchain/2X/contracts/Wager.sol\":{\"keccak256\":\"0x5019f2ae507b5c21bd8d6427ffea9834f99ad4351ddc4833cc4b0bea9e66f5fd\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6eb5cbd5e6d4489ae5ab2ce2d4d12f6b89cccb1de751186c805fff07cc6ce846\",\"dweb:/ipfs/QmeqHMPBLDDTTJPR46dYMBup1xDdoUks4iAZE9o7rDhS6N\"]},\"/Users/jaredborders/Documents/Work/Blockchain/2X/contracts/WagerFactory.sol\":{\"keccak256\":\"0xbc8f5e1b3376b1c2307b26792418d0b70439bda8780c83ad08eff915a0342fa6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://446e29f11472eb396309df936ee0eac01ce624126bdd3ea2260f0fd96af630c6\",\"dweb:/ipfs/QmS7FfEa43G9mZq4awZJXzR9769dD3dPWJDFfN4RQG1D1r\"]},\"/Users/jaredborders/Documents/Work/Blockchain/2X/node_modules/@chainlink/contracts/src/v0.8/dev/VRFConsumerBase.sol\":{\"keccak256\":\"0xc3c5cedd3e152926ba22cf4b61989180dd5a366d542effba195b52a5eb7ca2a1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://aab944a81253882452a16e57789d83bab2a40b9780591ce35b303e8a2b398f6a\",\"dweb:/ipfs/QmUgNdJe2RhfZfsJsdURWJxhm3CKVGuTPFctKC5ERVkk9B\"]},\"/Users/jaredborders/Documents/Work/Blockchain/2X/node_modules/@chainlink/contracts/src/v0.8/dev/VRFRequestIDBase.sol\":{\"keccak256\":\"0x7c8dad07e6c6c9269d97fd1191ccf9c0f0068683f1f88003e688eef9373de0d9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1d88c83a359c70f6b2e2e05d8f7611cce4a3d316a65e5175e14bcf9a6ced98af\",\"dweb:/ipfs/QmeH3BEuVvaaQsz7sN5myEnFLoabTG4j85vS9Z6rfJkads\"]},\"/Users/jaredborders/Documents/Work/Blockchain/2X/node_modules/@chainlink/contracts/src/v0.8/interfaces/LinkTokenInterface.sol\":{\"keccak256\":\"0x50528c237386c55ff122d047f91b32be7abe24e9dfdc609de21cd605aae83b9a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://92037bd13b34432f9377cb205c0039bd0724af66ea605598db31d4ccd33f879f\",\"dweb:/ipfs/QmdH6Ef5PZgcPrJuWboLX5MhmezzTFniZCwJ6fk2tYVua4\"]}},\"version\":1}",
    "bytecode": "60c0604052600580546001600160a01b031990811673dd3782915140c8f3b190b5d67eac6dc5760c46e9179091556006805490911673a36085f69e2889c224210f603d836748e7dc008817905534801561005857600080fd5b506040516108e63803806108e6833981016040819052610077916100ec565b600554600654606091821b6001600160601b031990811660a052911b16608052600180546001600160a01b0319166001600160a01b03929092169190911790557f6c3699283bda56ad74f6b855546325b68d482e983852a7a82979cc4807b641f460025567016345785d8a000060035561011a565b6000602082840312156100fd578081fd5b81516001600160a01b0381168114610113578182fd5b9392505050565b60805160601c60a05160601c61078d61015960003960008181610174015261037b01526000818160df015281816101cf015261034c015261078d6000f3fe608060405234801561001057600080fd5b50600436106100575760003560e01c806342619f661461005c5780634915c2401461007a57806394985ddd14610082578063b37217a414610097578063c45a0155146100aa575b600080fd5b6100646100bf565b60405161007191906105fe565b60405180910390f35b6100646100c5565b610095610090366004610521565b610169565b005b6100646100a5366004610542565b6101c8565b6100b26102c6565b6040516100719190610580565b60045481565b6040516370a0823160e01b81526000906001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016906370a0823190610114903090600401610580565b60206040518083038186803b15801561012c57600080fd5b505afa158015610140573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610164919061055a565b905090565b336001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146101ba5760405162461bcd60e51b81526004016101b1906106c8565b60405180910390fd5b6101c482826102d5565b5050565b60006003547f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166370a08231306040518263ffffffff1660e01b81526004016102199190610580565b60206040518083038186803b15801561023157600080fd5b505afa158015610245573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610269919061055a565b10156102875760405162461bcd60e51b81526004016101b19061067d565b6001546001600160a01b031633146102b15760405162461bcd60e51b81526004016101b19061062b565b6102c060025460035484610348565b92915050565b6001546001600160a01b031681565b6102e0600282610737565b6004818155600154604051623a082f60e31b81526001600160a01b03909116926301d0417892610312928791016106ff565b600060405180830381600087803b15801561032c57600080fd5b505af1158015610340573d6000803e3d6000fd5b505050505050565b60007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316634000aea07f00000000000000000000000000000000000000000000000000000000000000008587866040516020016103ae929190610572565b6040516020818303038152906040526040518463ffffffff1660e01b81526004016103db93929190610594565b602060405180830381600087803b1580156103f557600080fd5b505af1158015610409573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061042d91906104fa565b50600061044e8584306000808a81526020019081526020016000205461048d565b60008681526020819052604090205490915061046b906001610713565b60008681526020819052604090205561048485826104c7565b95945050505050565b6000848484846040516020016104a69493929190610607565b60408051601f19818403018152919052805160209091012095945050505050565b600082826040516020016104dc929190610572565b60405160208183030381529060405280519060200120905092915050565b60006020828403121561050b578081fd5b8151801515811461051a578182fd5b9392505050565b60008060408385031215610533578081fd5b50508035926020909101359150565b600060208284031215610553578081fd5b5035919050565b60006020828403121561056b578081fd5b5051919050565b918252602082015260400190565b6001600160a01b0391909116815260200190565b600060018060a01b038516825260208481840152606060408401528351806060850152825b818110156105d5578581018301518582016080015282016105b9565b818111156105e65783608083870101525b50601f01601f19169290920160800195945050505050565b90815260200190565b93845260208401929092526001600160a01b03166040830152606082015260800190565b60208082526032908201527f4f6e6c792074686520576167657220466163746f72792063616e2072657472696040820152716576652072616e646f6d206e756d6265727360701b606082015260800190565b6020808252602b908201527f4e6f7420656e6f756768204c494e4b202d2066696c6c20636f6e74726163742060408201526a1dda5d1a0819985d58d95d60aa1b606082015260800190565b6020808252601f908201527f4f6e6c7920565246436f6f7264696e61746f722063616e2066756c66696c6c00604082015260600190565b61ffff929092168252602082015260400190565b6000821982111561073257634e487b7160e01b81526011600452602481fd5b500190565b60008261075257634e487b7160e01b81526012600452602481fd5b50069056fea264697066735822122053f4dac3e3ad055e44a67b2e43f6eabbb0b8aa108e5fe1394c02de87b14d0ca264736f6c63430008000033",
    "deployedBytecode": "608060405234801561001057600080fd5b50600436106100575760003560e01c806342619f661461005c5780634915c2401461007a57806394985ddd14610082578063b37217a414610097578063c45a0155146100aa575b600080fd5b6100646100bf565b60405161007191906105fe565b60405180910390f35b6100646100c5565b610095610090366004610521565b610169565b005b6100646100a5366004610542565b6101c8565b6100b26102c6565b6040516100719190610580565b60045481565b6040516370a0823160e01b81526000906001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016906370a0823190610114903090600401610580565b60206040518083038186803b15801561012c57600080fd5b505afa158015610140573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610164919061055a565b905090565b336001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146101ba5760405162461bcd60e51b81526004016101b1906106c8565b60405180910390fd5b6101c482826102d5565b5050565b60006003547f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166370a08231306040518263ffffffff1660e01b81526004016102199190610580565b60206040518083038186803b15801561023157600080fd5b505afa158015610245573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610269919061055a565b10156102875760405162461bcd60e51b81526004016101b19061067d565b6001546001600160a01b031633146102b15760405162461bcd60e51b81526004016101b19061062b565b6102c060025460035484610348565b92915050565b6001546001600160a01b031681565b6102e0600282610737565b6004818155600154604051623a082f60e31b81526001600160a01b03909116926301d0417892610312928791016106ff565b600060405180830381600087803b15801561032c57600080fd5b505af1158015610340573d6000803e3d6000fd5b505050505050565b60007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316634000aea07f00000000000000000000000000000000000000000000000000000000000000008587866040516020016103ae929190610572565b6040516020818303038152906040526040518463ffffffff1660e01b81526004016103db93929190610594565b602060405180830381600087803b1580156103f557600080fd5b505af1158015610409573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061042d91906104fa565b50600061044e8584306000808a81526020019081526020016000205461048d565b60008681526020819052604090205490915061046b906001610713565b60008681526020819052604090205561048485826104c7565b95945050505050565b6000848484846040516020016104a69493929190610607565b60408051601f19818403018152919052805160209091012095945050505050565b600082826040516020016104dc929190610572565b60405160208183030381529060405280519060200120905092915050565b60006020828403121561050b578081fd5b8151801515811461051a578182fd5b9392505050565b60008060408385031215610533578081fd5b50508035926020909101359150565b600060208284031215610553578081fd5b5035919050565b60006020828403121561056b578081fd5b5051919050565b918252602082015260400190565b6001600160a01b0391909116815260200190565b600060018060a01b038516825260208481840152606060408401528351806060850152825b818110156105d5578581018301518582016080015282016105b9565b818111156105e65783608083870101525b50601f01601f19169290920160800195945050505050565b90815260200190565b93845260208401929092526001600160a01b03166040830152606082015260800190565b60208082526032908201527f4f6e6c792074686520576167657220466163746f72792063616e2072657472696040820152716576652072616e646f6d206e756d6265727360701b606082015260800190565b6020808252602b908201527f4e6f7420656e6f756768204c494e4b202d2066696c6c20636f6e74726163742060408201526a1dda5d1a0819985d58d95d60aa1b606082015260800190565b6020808252601f908201527f4f6e6c7920565246436f6f7264696e61746f722063616e2066756c66696c6c00604082015260600190565b61ffff929092168252602082015260400190565b6000821982111561073257634e487b7160e01b81526011600452602481fd5b500190565b60008261075257634e487b7160e01b81526012600452602481fd5b50069056fea264697066735822122053f4dac3e3ad055e44a67b2e43f6eabbb0b8aa108e5fe1394c02de87b14d0ca264736f6c63430008000033",
    "sourceMap": "271:2821:0:-:0;;;516:82;;;-1:-1:-1;;;;;;516:82:0;;;556:42;516:82;;;;604:77;;;;;;639:42;604:77;;;1036:263;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1091:21;;1114:16;;8967:32:3;;;;-1:-1:-1;;8967:32:3;;;;;9005;;;;;-1:-1:-1;1146:18:0;;-1:-1:-1;;;;;;1146:18:0::1;-1:-1:-1::0;;;;;1146:18:0;;;::::1;::::0;;;::::1;::::0;;1184:66:::1;1174:7;:76:::0;1266:14:::1;-1:-1:-1::0;1260:20:0;271:2821;;14:310:6;;137:2;125:9;116:7;112:23;108:32;105:2;;;158:6;150;143:22;105:2;189:16;;-1:-1:-1;;;;;234:31:6;;224:42;;214:2;;285:6;277;270:22;214:2;313:5;95:229;-1:-1:-1;;;95:229:6:o;:::-;271:2821:0;;;;;;;;;;;;;;;;;;",
    "deployedSourceMap": "271:2821:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;437:27;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2973:117;;;:::i;9237:225:3:-;;;;;;:::i;:::-;;:::i;:::-;;2183:364:0;;;;;;:::i;:::-;;:::i;353:22::-;;;:::i;:::-;;;;;;;:::i;437:27::-;;;;:::o;2973:117::-;3054:29;;-1:-1:-1;;;3054:29:0;;3021:14;;3054:4;-1:-1:-1;;;;;3054:14:0;;-1:-1:-1;;3054:29:0;;3077:4;;3054:29;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3047:36;;2973:117;:::o;9237:225:3:-;9361:14;-1:-1:-1;;;;;9347:28:3;:10;:28;9339:72;;;;-1:-1:-1;;;9339:72:3;;;;;;;:::i;:::-;;;;;;;;;9417:40;9435:9;9446:10;9417:17;:40::i;:::-;9237:225;;:::o;2183:364:0:-;2320:3;;2287:29;;-1:-1:-1;;;2287:29:0;;2250:17;;2320:3;-1:-1:-1;;;;;2287:4:0;:14;;;;:29;;2310:4;;2287:29;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:36;;2279:92;;;;-1:-1:-1;;;2279:92:0;;;;;;;:::i;:::-;2403:7;;-1:-1:-1;;;;;2403:7:0;2389:10;:21;2381:84;;;;-1:-1:-1;;;2381:84:0;;;;;;;:::i;:::-;2491:49;2509:7;;2518:3;;2523:16;2491:17;:49::i;:::-;2484:56;2183:364;-1:-1:-1;;2183:364:0:o;353:22::-;;;-1:-1:-1;;;;;353:22:0;;:::o;2618:290::-;2807:14;2820:1;2807:10;:14;:::i;:::-;2792:12;:29;;;2844:7;;2831:70;;-1:-1:-1;;;2831:70:0;;-1:-1:-1;;;;;2844:7:0;;;;2831:37;;:70;;2891:9;;2831:70;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2618:290;;:::o;7363:1042:3:-;7486:17;7518:4;-1:-1:-1;;;;;7518:20:3;;7539:14;7555:4;7572:8;7582:5;7561:27;;;;;;;;;:::i;:::-;;;;;;;;;;;;;7518:71;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;7820:15;7839:66;7856:8;7866:5;7881:4;7888:6;:16;7895:8;7888:16;;;;;;;;;;;;7839;:66::i;:::-;8335:6;:16;;;;;;;;;;;7820:85;;-1:-1:-1;8335:20:3;;8354:1;8335:20;:::i;:::-;8316:6;:16;;;;;;;;;;:39;8368:32;8323:8;8392:7;8368:13;:32::i;:::-;8361:39;7363:1042;-1:-1:-1;;;;;7363:1042:3:o;797:266:4:-;958:7;1016:8;1026:9;1037:10;1049:6;1005:51;;;;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1;;1005:51:4;;;;;;995:62;;1005:51;995:62;;;;;;-1:-1:-1;;;;;797:266:4:o;1443:204::-;1561:7;1617:8;1627:13;1600:41;;;;;;;;;:::i;:::-;;;;;;;;;;;;;1590:52;;;;;;1583:59;;1443:204;;;;:::o;14:297:6:-;;134:2;122:9;113:7;109:23;105:32;102:2;;;155:6;147;140:22;102:2;192:9;186:16;245:5;238:13;231:21;224:5;221:32;211:2;;272:6;264;257:22;211:2;300:5;92:219;-1:-1:-1;;;92:219:6:o;316:258::-;;;445:2;433:9;424:7;420:23;416:32;413:2;;;466:6;458;451:22;413:2;-1:-1:-1;;494:23:6;;;564:2;549:18;;;536:32;;-1:-1:-1;403:171:6:o;579:190::-;;691:2;679:9;670:7;666:23;662:32;659:2;;;712:6;704;697:22;659:2;-1:-1:-1;740:23:6;;649:120;-1:-1:-1;649:120:6:o;774:194::-;;897:2;885:9;876:7;872:23;868:32;865:2;;;918:6;910;903:22;865:2;-1:-1:-1;946:16:6;;855:113;-1:-1:-1;855:113:6:o;973:247::-;1130:19;;;1174:2;1165:12;;1158:28;1211:2;1202:12;;1120:100::o;1225:203::-;-1:-1:-1;;;;;1389:32:6;;;;1371:51;;1359:2;1344:18;;1326:102::o;1433:772::-;;1665:1;1661;1656:3;1652:11;1648:19;1640:6;1636:32;1625:9;1618:51;1688:2;1726:6;1721:2;1710:9;1706:18;1699:34;1769:2;1764;1753:9;1749:18;1742:30;1801:6;1795:13;1844:6;1839:2;1828:9;1824:18;1817:34;1869:4;1882:141;1896:6;1893:1;1890:13;1882:141;;;1992:14;;;1988:23;;1982:30;1957:17;;;1976:3;1953:27;1946:67;1911:10;;1882:141;;;2041:6;2038:1;2035:13;2032:2;;;2112:4;2106:3;2097:6;2086:9;2082:22;2078:32;2071:46;2032:2;-1:-1:-1;2188:2:6;2167:15;-1:-1:-1;;2163:29:6;2148:45;;;;2195:3;2144:55;;1608:597;-1:-1:-1;;;;;1608:597:6:o;2210:177::-;2356:25;;;2344:2;2329:18;;2311:76::o;2645:417::-;2876:25;;;2932:2;2917:18;;2910:34;;;;-1:-1:-1;;;;;2980:32:6;2975:2;2960:18;;2953:60;3044:2;3029:18;;3022:34;2863:3;2848:19;;2830:232::o;3067:414::-;3269:2;3251:21;;;3308:2;3288:18;;;3281:30;3347:34;3342:2;3327:18;;3320:62;-1:-1:-1;;;3413:2:6;3398:18;;3391:48;3471:3;3456:19;;3241:240::o;3486:407::-;3688:2;3670:21;;;3727:2;3707:18;;;3700:30;3766:34;3761:2;3746:18;;3739:62;-1:-1:-1;;;3832:2:6;3817:18;;3810:41;3883:3;3868:19;;3660:233::o;3898:355::-;4100:2;4082:21;;;4139:2;4119:18;;;4112:30;4178:33;4173:2;4158:18;;4151:61;4244:2;4229:18;;4072:181::o;4258:259::-;4460:6;4448:19;;;;4430:38;;4499:2;4484:18;;4477:34;4418:2;4403:18;;4385:132::o;4704:229::-;;4775:1;4771:6;4768:1;4765:13;4762:2;;;-1:-1:-1;;;4801:33:6;;4857:4;4854:1;4847:15;4887:4;4801:33;4875:17;4762:2;-1:-1:-1;4918:9:6;;4752:181::o;4938:209::-;;4996:1;4986:2;;-1:-1:-1;;;5021:31:6;;5075:4;5072:1;5065:15;5103:4;5021:31;5093:15;4986:2;-1:-1:-1;5132:9:6;;4976:171::o",
    "sourcePath": "/Users/jaredborders/Documents/Work/Blockchain/2X/contracts/RandomNumberConsumer.sol",
    "compiler": {
        "name": "solc",
        "version": "0.8.0+commit.c7dfd78e"
    },
    "ast": {
        "absolutePath": "/Users/jaredborders/Documents/Work/Blockchain/2X/contracts/RandomNumberConsumer.sol",
        "exportedSymbols": {
            "LinkTokenInterface": [
                998
            ],
            "RandomNumberConsumer": [
                126
            ],
            "VRFConsumerBase": [
                853
            ],
            "VRFRequestIDBase": [
                903
            ],
            "Wager": [
                462
            ],
            "WagerFactory": [
                734
            ]
        },
        "id": 127,
        "license": "MIT",
        "nodeType": "SourceUnit",
        "nodes": [
            {
                "id": 1,
                "literals": [
                    "solidity",
                    "^",
                    "0.8",
                    ".0"
                ],
                "nodeType": "PragmaDirective",
                "src": "32:23:0"
            },
            {
                "absolutePath": "/Users/jaredborders/Documents/Work/Blockchain/2X/node_modules/@chainlink/contracts/src/v0.8/dev/VRFConsumerBase.sol",
                "file": "/Users/jaredborders/Documents/Work/Blockchain/2X/node_modules/@chainlink/contracts/src/v0.8/dev/VRFConsumerBase.sol",
                "id": 2,
                "nodeType": "ImportDirective",
                "scope": 127,
                "sourceUnit": 854,
                "src": "57:125:0",
                "symbolAliases": [],
                "unitAlias": ""
            },
            {
                "absolutePath": "/Users/jaredborders/Documents/Work/Blockchain/2X/contracts/WagerFactory.sol",
                "file": "./WagerFactory.sol",
                "id": 3,
                "nodeType": "ImportDirective",
                "scope": 127,
                "sourceUnit": 735,
                "src": "183:28:0",
                "symbolAliases": [],
                "unitAlias": ""
            },
            {
                "abstract": false,
                "baseContracts": [
                    {
                        "baseName": {
                            "id": 5,
                            "name": "VRFConsumerBase",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 853,
                            "src": "304:15:0"
                        },
                        "id": 6,
                        "nodeType": "InheritanceSpecifier",
                        "src": "304:15:0"
                    }
                ],
                "contractDependencies": [
                    853,
                    903
                ],
                "contractKind": "contract",
                "documentation": {
                    "id": 4,
                    "nodeType": "StructuredDocumentation",
                    "src": "213:58:0",
                    "text": "@title RandomNumberConsumer - Random number generator"
                },
                "fullyImplemented": true,
                "id": 126,
                "linearizedBaseContracts": [
                    126,
                    853,
                    903
                ],
                "name": "RandomNumberConsumer",
                "nodeType": "ContractDefinition",
                "nodes": [
                    {
                        "constant": false,
                        "functionSelector": "c45a0155",
                        "id": 8,
                        "mutability": "mutable",
                        "name": "factory",
                        "nodeType": "VariableDeclaration",
                        "scope": 126,
                        "src": "353:22:0",
                        "stateVariable": true,
                        "storageLocation": "default",
                        "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                        },
                        "typeName": {
                            "id": 7,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "353:7:0",
                            "stateMutability": "nonpayable",
                            "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                            }
                        },
                        "visibility": "public"
                    },
                    {
                        "constant": false,
                        "id": 10,
                        "mutability": "mutable",
                        "name": "keyHash",
                        "nodeType": "VariableDeclaration",
                        "scope": 126,
                        "src": "381:24:0",
                        "stateVariable": true,
                        "storageLocation": "default",
                        "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                        },
                        "typeName": {
                            "id": 9,
                            "name": "bytes32",
                            "nodeType": "ElementaryTypeName",
                            "src": "381:7:0",
                            "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                            }
                        },
                        "visibility": "internal"
                    },
                    {
                        "constant": false,
                        "id": 12,
                        "mutability": "mutable",
                        "name": "fee",
                        "nodeType": "VariableDeclaration",
                        "scope": 126,
                        "src": "411:20:0",
                        "stateVariable": true,
                        "storageLocation": "default",
                        "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                        },
                        "typeName": {
                            "id": 11,
                            "name": "uint256",
                            "nodeType": "ElementaryTypeName",
                            "src": "411:7:0",
                            "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                            }
                        },
                        "visibility": "internal"
                    },
                    {
                        "constant": false,
                        "functionSelector": "42619f66",
                        "id": 14,
                        "mutability": "mutable",
                        "name": "randomResult",
                        "nodeType": "VariableDeclaration",
                        "scope": 126,
                        "src": "437:27:0",
                        "stateVariable": true,
                        "storageLocation": "default",
                        "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                        },
                        "typeName": {
                            "id": 13,
                            "name": "uint256",
                            "nodeType": "ElementaryTypeName",
                            "src": "437:7:0",
                            "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                            }
                        },
                        "visibility": "public"
                    },
                    {
                        "constant": false,
                        "id": 17,
                        "mutability": "mutable",
                        "name": "VRFCoordinatorAddress",
                        "nodeType": "VariableDeclaration",
                        "scope": 126,
                        "src": "516:82:0",
                        "stateVariable": true,
                        "storageLocation": "default",
                        "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                        },
                        "typeName": {
                            "id": 15,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "516:7:0",
                            "stateMutability": "nonpayable",
                            "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                            }
                        },
                        "value": {
                            "hexValue": "307864443337383239313531343063386633623139304235443637654163366463353736304334364539",
                            "id": 16,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "556:42:0",
                            "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                            },
                            "value": "0xdD3782915140c8f3b190B5D67eAc6dc5760C46E9"
                        },
                        "visibility": "private"
                    },
                    {
                        "constant": false,
                        "id": 20,
                        "mutability": "mutable",
                        "name": "LINKTokenAddress",
                        "nodeType": "VariableDeclaration",
                        "scope": 126,
                        "src": "604:77:0",
                        "stateVariable": true,
                        "storageLocation": "default",
                        "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                        },
                        "typeName": {
                            "id": 18,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "604:7:0",
                            "stateMutability": "nonpayable",
                            "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                            }
                        },
                        "value": {
                            "hexValue": "307861333630383546363965323838396332323432313046363033443833363734386537644330303838",
                            "id": 19,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "639:42:0",
                            "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                            },
                            "value": "0xa36085F69e2889c224210F603D836748e7dC0088"
                        },
                        "visibility": "private"
                    },
                    {
                        "body": {
                            "id": 46,
                            "nodeType": "Block",
                            "src": "1136:163:0",
                            "statements": [
                                {
                                    "expression": {
                                        "id": 32,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftHandSide": {
                                            "id": 30,
                                            "name": "factory",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 8,
                                            "src": "1146:7:0",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_address",
                                                "typeString": "address"
                                            }
                                        },
                                        "nodeType": "Assignment",
                                        "operator": "=",
                                        "rightHandSide": {
                                            "id": 31,
                                            "name": "_factory",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 23,
                                            "src": "1156:8:0",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_address",
                                                "typeString": "address"
                                            }
                                        },
                                        "src": "1146:18:0",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                        }
                                    },
                                    "id": 33,
                                    "nodeType": "ExpressionStatement",
                                    "src": "1146:18:0"
                                },
                                {
                                    "expression": {
                                        "id": 36,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftHandSide": {
                                            "id": 34,
                                            "name": "keyHash",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 10,
                                            "src": "1174:7:0",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_bytes32",
                                                "typeString": "bytes32"
                                            }
                                        },
                                        "nodeType": "Assignment",
                                        "operator": "=",
                                        "rightHandSide": {
                                            "hexValue": "307836633336393932383362646135366164373466366238353535343633323562363864343832653938333835326137613832393739636334383037623634316634",
                                            "id": 35,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": true,
                                            "kind": "number",
                                            "lValueRequested": false,
                                            "nodeType": "Literal",
                                            "src": "1184:66:0",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_rational_48946254440382972832698805719512371851335635566567336471579531964578392326644_by_1",
                                                "typeString": "int_const 4894...(69 digits omitted)...6644"
                                            },
                                            "value": "0x6c3699283bda56ad74f6b855546325b68d482e983852a7a82979cc4807b641f4"
                                        },
                                        "src": "1174:76:0",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_bytes32",
                                            "typeString": "bytes32"
                                        }
                                    },
                                    "id": 37,
                                    "nodeType": "ExpressionStatement",
                                    "src": "1174:76:0"
                                },
                                {
                                    "expression": {
                                        "id": 44,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftHandSide": {
                                            "id": 38,
                                            "name": "fee",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 12,
                                            "src": "1260:3:0",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                            }
                                        },
                                        "nodeType": "Assignment",
                                        "operator": "=",
                                        "rightHandSide": {
                                            "commonType": {
                                                "typeIdentifier": "t_rational_100000000000000000_by_1",
                                                "typeString": "int_const 100000000000000000"
                                            },
                                            "id": 43,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": true,
                                            "lValueRequested": false,
                                            "leftExpression": {
                                                "hexValue": "302e31",
                                                "id": 39,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": true,
                                                "kind": "number",
                                                "lValueRequested": false,
                                                "nodeType": "Literal",
                                                "src": "1266:3:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_rational_1_by_10",
                                                    "typeString": "rational_const 1 / 10"
                                                },
                                                "value": "0.1"
                                            },
                                            "nodeType": "BinaryOperation",
                                            "operator": "*",
                                            "rightExpression": {
                                                "commonType": {
                                                    "typeIdentifier": "t_rational_1000000000000000000_by_1",
                                                    "typeString": "int_const 1000000000000000000"
                                                },
                                                "id": 42,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": true,
                                                "lValueRequested": false,
                                                "leftExpression": {
                                                    "hexValue": "3130",
                                                    "id": 40,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": true,
                                                    "kind": "number",
                                                    "lValueRequested": false,
                                                    "nodeType": "Literal",
                                                    "src": "1272:2:0",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_rational_10_by_1",
                                                        "typeString": "int_const 10"
                                                    },
                                                    "value": "10"
                                                },
                                                "nodeType": "BinaryOperation",
                                                "operator": "**",
                                                "rightExpression": {
                                                    "hexValue": "3138",
                                                    "id": 41,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": true,
                                                    "kind": "number",
                                                    "lValueRequested": false,
                                                    "nodeType": "Literal",
                                                    "src": "1278:2:0",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_rational_18_by_1",
                                                        "typeString": "int_const 18"
                                                    },
                                                    "value": "18"
                                                },
                                                "src": "1272:8:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_rational_1000000000000000000_by_1",
                                                    "typeString": "int_const 1000000000000000000"
                                                }
                                            },
                                            "src": "1266:14:0",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_rational_100000000000000000_by_1",
                                                "typeString": "int_const 100000000000000000"
                                            }
                                        },
                                        "src": "1260:20:0",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                        }
                                    },
                                    "id": 45,
                                    "nodeType": "ExpressionStatement",
                                    "src": "1260:20:0"
                                }
                            ]
                        },
                        "documentation": {
                            "id": 21,
                            "nodeType": "StructuredDocumentation",
                            "src": "692:339:0",
                            "text": " Constructor inherits VRFConsumerBase\n \n Network: Kovan\n Chainlink VRF Coordinator address: 0xdD3782915140c8f3b190B5D67eAc6dc5760C46E9\n LINK token address:                0xa36085F69e2889c224210F603D836748e7dC0088\n Key Hash: 0x6c3699283bda56ad74f6b855546325b68d482e983852a7a82979cc4807b641f4"
                        },
                        "id": 47,
                        "implemented": true,
                        "kind": "constructor",
                        "modifiers": [
                            {
                                "arguments": [
                                    {
                                        "id": 26,
                                        "name": "VRFCoordinatorAddress",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 17,
                                        "src": "1091:21:0",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                        }
                                    },
                                    {
                                        "id": 27,
                                        "name": "LINKTokenAddress",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 20,
                                        "src": "1114:16:0",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                        }
                                    }
                                ],
                                "id": 28,
                                "modifierName": {
                                    "id": 25,
                                    "name": "VRFConsumerBase",
                                    "nodeType": "IdentifierPath",
                                    "referencedDeclaration": 853,
                                    "src": "1075:15:0"
                                },
                                "nodeType": "ModifierInvocation",
                                "src": "1075:56:0"
                            }
                        ],
                        "name": "",
                        "nodeType": "FunctionDefinition",
                        "parameters": {
                            "id": 24,
                            "nodeType": "ParameterList",
                            "parameters": [
                                {
                                    "constant": false,
                                    "id": 23,
                                    "mutability": "mutable",
                                    "name": "_factory",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 47,
                                    "src": "1048:16:0",
                                    "stateVariable": false,
                                    "storageLocation": "default",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                    },
                                    "typeName": {
                                        "id": 22,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "1048:7:0",
                                        "stateMutability": "nonpayable",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                        }
                                    },
                                    "visibility": "internal"
                                }
                            ],
                            "src": "1047:18:0"
                        },
                        "returnParameters": {
                            "id": 29,
                            "nodeType": "ParameterList",
                            "parameters": [],
                            "src": "1136:0:0"
                        },
                        "scope": 126,
                        "src": "1036:263:0",
                        "stateMutability": "nonpayable",
                        "virtual": false,
                        "visibility": "public"
                    },
                    {
                        "body": {
                            "id": 82,
                            "nodeType": "Block",
                            "src": "2269:278:0",
                            "statements": [
                                {
                                    "expression": {
                                        "arguments": [
                                            {
                                                "commonType": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                },
                                                "id": 64,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "leftExpression": {
                                                    "arguments": [
                                                        {
                                                            "arguments": [
                                                                {
                                                                    "id": 60,
                                                                    "name": "this",
                                                                    "nodeType": "Identifier",
                                                                    "overloadedDeclarations": [],
                                                                    "referencedDeclaration": 4294967268,
                                                                    "src": "2310:4:0",
                                                                    "typeDescriptions": {
                                                                        "typeIdentifier": "t_contract$_RandomNumberConsumer_$126",
                                                                        "typeString": "contract RandomNumberConsumer"
                                                                    }
                                                                }
                                                            ],
                                                            "expression": {
                                                                "argumentTypes": [
                                                                    {
                                                                        "typeIdentifier": "t_contract$_RandomNumberConsumer_$126",
                                                                        "typeString": "contract RandomNumberConsumer"
                                                                    }
                                                                ],
                                                                "id": 59,
                                                                "isConstant": false,
                                                                "isLValue": false,
                                                                "isPure": true,
                                                                "lValueRequested": false,
                                                                "nodeType": "ElementaryTypeNameExpression",
                                                                "src": "2302:7:0",
                                                                "typeDescriptions": {
                                                                    "typeIdentifier": "t_type$_t_address_$",
                                                                    "typeString": "type(address)"
                                                                },
                                                                "typeName": {
                                                                    "id": 58,
                                                                    "name": "address",
                                                                    "nodeType": "ElementaryTypeName",
                                                                    "src": "2302:7:0",
                                                                    "typeDescriptions": {}
                                                                }
                                                            },
                                                            "id": 61,
                                                            "isConstant": false,
                                                            "isLValue": false,
                                                            "isPure": false,
                                                            "kind": "typeConversion",
                                                            "lValueRequested": false,
                                                            "names": [],
                                                            "nodeType": "FunctionCall",
                                                            "src": "2302:13:0",
                                                            "tryCall": false,
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_address",
                                                                "typeString": "address"
                                                            }
                                                        }
                                                    ],
                                                    "expression": {
                                                        "argumentTypes": [
                                                            {
                                                                "typeIdentifier": "t_address",
                                                                "typeString": "address"
                                                            }
                                                        ],
                                                        "expression": {
                                                            "id": 56,
                                                            "name": "LINK",
                                                            "nodeType": "Identifier",
                                                            "overloadedDeclarations": [],
                                                            "referencedDeclaration": 806,
                                                            "src": "2287:4:0",
                                                            "typeDescriptions": {
                                                                "typeIdentifier": "t_contract$_LinkTokenInterface_$998",
                                                                "typeString": "contract LinkTokenInterface"
                                                            }
                                                        },
                                                        "id": 57,
                                                        "isConstant": false,
                                                        "isLValue": false,
                                                        "isPure": false,
                                                        "lValueRequested": false,
                                                        "memberName": "balanceOf",
                                                        "nodeType": "MemberAccess",
                                                        "referencedDeclaration": 930,
                                                        "src": "2287:14:0",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                                                            "typeString": "function (address) view external returns (uint256)"
                                                        }
                                                    },
                                                    "id": 62,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": false,
                                                    "kind": "functionCall",
                                                    "lValueRequested": false,
                                                    "names": [],
                                                    "nodeType": "FunctionCall",
                                                    "src": "2287:29:0",
                                                    "tryCall": false,
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_uint256",
                                                        "typeString": "uint256"
                                                    }
                                                },
                                                "nodeType": "BinaryOperation",
                                                "operator": ">=",
                                                "rightExpression": {
                                                    "id": 63,
                                                    "name": "fee",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 12,
                                                    "src": "2320:3:0",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_uint256",
                                                        "typeString": "uint256"
                                                    }
                                                },
                                                "src": "2287:36:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_bool",
                                                    "typeString": "bool"
                                                }
                                            },
                                            {
                                                "hexValue": "4e6f7420656e6f756768204c494e4b202d2066696c6c20636f6e7472616374207769746820666175636574",
                                                "id": 65,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": true,
                                                "kind": "string",
                                                "lValueRequested": false,
                                                "nodeType": "Literal",
                                                "src": "2325:45:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_stringliteral_4bb3a9958b8c6e95beec57f36a0352593367170b4a84072c44b036bee3a36e74",
                                                    "typeString": "literal_string \"Not enough LINK - fill contract with faucet\""
                                                },
                                                "value": "Not enough LINK - fill contract with faucet"
                                            }
                                        ],
                                        "expression": {
                                            "argumentTypes": [
                                                {
                                                    "typeIdentifier": "t_bool",
                                                    "typeString": "bool"
                                                },
                                                {
                                                    "typeIdentifier": "t_stringliteral_4bb3a9958b8c6e95beec57f36a0352593367170b4a84072c44b036bee3a36e74",
                                                    "typeString": "literal_string \"Not enough LINK - fill contract with faucet\""
                                                }
                                            ],
                                            "id": 55,
                                            "name": "require",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [
                                                4294967278,
                                                4294967278
                                            ],
                                            "referencedDeclaration": 4294967278,
                                            "src": "2279:7:0",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                                                "typeString": "function (bool,string memory) pure"
                                            }
                                        },
                                        "id": 66,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "2279:92:0",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_tuple$__$",
                                            "typeString": "tuple()"
                                        }
                                    },
                                    "id": 67,
                                    "nodeType": "ExpressionStatement",
                                    "src": "2279:92:0"
                                },
                                {
                                    "expression": {
                                        "arguments": [
                                            {
                                                "commonType": {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                },
                                                "id": 72,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "lValueRequested": false,
                                                "leftExpression": {
                                                    "expression": {
                                                        "id": 69,
                                                        "name": "msg",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 4294967281,
                                                        "src": "2389:3:0",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_magic_message",
                                                            "typeString": "msg"
                                                        }
                                                    },
                                                    "id": 70,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": false,
                                                    "lValueRequested": false,
                                                    "memberName": "sender",
                                                    "nodeType": "MemberAccess",
                                                    "src": "2389:10:0",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_address",
                                                        "typeString": "address"
                                                    }
                                                },
                                                "nodeType": "BinaryOperation",
                                                "operator": "==",
                                                "rightExpression": {
                                                    "id": 71,
                                                    "name": "factory",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 8,
                                                    "src": "2403:7:0",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_address",
                                                        "typeString": "address"
                                                    }
                                                },
                                                "src": "2389:21:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_bool",
                                                    "typeString": "bool"
                                                }
                                            },
                                            {
                                                "hexValue": "4f6e6c792074686520576167657220466163746f72792063616e2072657472696576652072616e646f6d206e756d62657273",
                                                "id": 73,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": true,
                                                "kind": "string",
                                                "lValueRequested": false,
                                                "nodeType": "Literal",
                                                "src": "2412:52:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_stringliteral_0648ac1211110292d2a6a81cd7b1a4fbc7b925e2547adb2f8eeca13f7306e225",
                                                    "typeString": "literal_string \"Only the Wager Factory can retrieve random numbers\""
                                                },
                                                "value": "Only the Wager Factory can retrieve random numbers"
                                            }
                                        ],
                                        "expression": {
                                            "argumentTypes": [
                                                {
                                                    "typeIdentifier": "t_bool",
                                                    "typeString": "bool"
                                                },
                                                {
                                                    "typeIdentifier": "t_stringliteral_0648ac1211110292d2a6a81cd7b1a4fbc7b925e2547adb2f8eeca13f7306e225",
                                                    "typeString": "literal_string \"Only the Wager Factory can retrieve random numbers\""
                                                }
                                            ],
                                            "id": 68,
                                            "name": "require",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [
                                                4294967278,
                                                4294967278
                                            ],
                                            "referencedDeclaration": 4294967278,
                                            "src": "2381:7:0",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                                                "typeString": "function (bool,string memory) pure"
                                            }
                                        },
                                        "id": 74,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "2381:84:0",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_tuple$__$",
                                            "typeString": "tuple()"
                                        }
                                    },
                                    "id": 75,
                                    "nodeType": "ExpressionStatement",
                                    "src": "2381:84:0"
                                },
                                {
                                    "expression": {
                                        "arguments": [
                                            {
                                                "id": 77,
                                                "name": "keyHash",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 10,
                                                "src": "2509:7:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_bytes32",
                                                    "typeString": "bytes32"
                                                }
                                            },
                                            {
                                                "id": 78,
                                                "name": "fee",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 12,
                                                "src": "2518:3:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                }
                                            },
                                            {
                                                "id": 79,
                                                "name": "userProvidedSeed",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 50,
                                                "src": "2523:16:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                }
                                            }
                                        ],
                                        "expression": {
                                            "argumentTypes": [
                                                {
                                                    "typeIdentifier": "t_bytes32",
                                                    "typeString": "bytes32"
                                                },
                                                {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                },
                                                {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                }
                                            ],
                                            "id": 76,
                                            "name": "requestRandomness",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 803,
                                            "src": "2491:17:0",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_uint256_$_t_uint256_$returns$_t_bytes32_$",
                                                "typeString": "function (bytes32,uint256,uint256) returns (bytes32)"
                                            }
                                        },
                                        "id": 80,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "2491:49:0",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_bytes32",
                                            "typeString": "bytes32"
                                        }
                                    },
                                    "functionReturnParameters": 54,
                                    "id": 81,
                                    "nodeType": "Return",
                                    "src": "2484:56:0"
                                }
                            ]
                        },
                        "documentation": {
                            "id": 48,
                            "nodeType": "StructuredDocumentation",
                            "src": "1309:869:0",
                            "text": " Requests randomness from a user-provided seed************************************************************************************\n                                    STOP!                                         * \n         THIS FUNCTION WILL FAIL IF THIS CONTRACT DOES NOT OWN LINK               *\n         ----------------------------------------------------------               *\n         Learn how to obtain testnet LINK and fund this contract:                 *\n         ------- https://docs.chain.link/docs/acquire-link --------               *\n         ---- https://docs.chain.link/docs/fund-your-contract -----               *\n                                                                                  ************************************************************************************"
                        },
                        "functionSelector": "b37217a4",
                        "id": 83,
                        "implemented": true,
                        "kind": "function",
                        "modifiers": [],
                        "name": "getRandomNumber",
                        "nodeType": "FunctionDefinition",
                        "parameters": {
                            "id": 51,
                            "nodeType": "ParameterList",
                            "parameters": [
                                {
                                    "constant": false,
                                    "id": 50,
                                    "mutability": "mutable",
                                    "name": "userProvidedSeed",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 83,
                                    "src": "2208:24:0",
                                    "stateVariable": false,
                                    "storageLocation": "default",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                    },
                                    "typeName": {
                                        "id": 49,
                                        "name": "uint256",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "2208:7:0",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                        }
                                    },
                                    "visibility": "internal"
                                }
                            ],
                            "src": "2207:26:0"
                        },
                        "returnParameters": {
                            "id": 54,
                            "nodeType": "ParameterList",
                            "parameters": [
                                {
                                    "constant": false,
                                    "id": 53,
                                    "mutability": "mutable",
                                    "name": "requestId",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 83,
                                    "src": "2250:17:0",
                                    "stateVariable": false,
                                    "storageLocation": "default",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_bytes32",
                                        "typeString": "bytes32"
                                    },
                                    "typeName": {
                                        "id": 52,
                                        "name": "bytes32",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "2250:7:0",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_bytes32",
                                            "typeString": "bytes32"
                                        }
                                    },
                                    "visibility": "internal"
                                }
                            ],
                            "src": "2249:19:0"
                        },
                        "scope": 126,
                        "src": "2183:364:0",
                        "stateMutability": "nonpayable",
                        "virtual": false,
                        "visibility": "public"
                    },
                    {
                        "baseFunctions": [
                            749
                        ],
                        "body": {
                            "id": 109,
                            "nodeType": "Block",
                            "src": "2702:206:0",
                            "statements": [
                                {
                                    "expression": {
                                        "id": 96,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftHandSide": {
                                            "id": 92,
                                            "name": "randomResult",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 14,
                                            "src": "2792:12:0",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                            }
                                        },
                                        "nodeType": "Assignment",
                                        "operator": "=",
                                        "rightHandSide": {
                                            "commonType": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                            },
                                            "id": 95,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "leftExpression": {
                                                "id": 93,
                                                "name": "randomness",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 88,
                                                "src": "2807:10:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_uint256",
                                                    "typeString": "uint256"
                                                }
                                            },
                                            "nodeType": "BinaryOperation",
                                            "operator": "%",
                                            "rightExpression": {
                                                "hexValue": "32",
                                                "id": 94,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": true,
                                                "kind": "number",
                                                "lValueRequested": false,
                                                "nodeType": "Literal",
                                                "src": "2820:1:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_rational_2_by_1",
                                                    "typeString": "int_const 2"
                                                },
                                                "value": "2"
                                            },
                                            "src": "2807:14:0",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                            }
                                        },
                                        "src": "2792:29:0",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                        }
                                    },
                                    "id": 97,
                                    "nodeType": "ExpressionStatement",
                                    "src": "2792:29:0"
                                },
                                {
                                    "expression": {
                                        "arguments": [
                                            {
                                                "arguments": [
                                                    {
                                                        "id": 104,
                                                        "name": "randomResult",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 14,
                                                        "src": "2876:12:0",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_uint256",
                                                            "typeString": "uint256"
                                                        }
                                                    }
                                                ],
                                                "expression": {
                                                    "argumentTypes": [
                                                        {
                                                            "typeIdentifier": "t_uint256",
                                                            "typeString": "uint256"
                                                        }
                                                    ],
                                                    "id": 103,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": true,
                                                    "lValueRequested": false,
                                                    "nodeType": "ElementaryTypeNameExpression",
                                                    "src": "2869:6:0",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_type$_t_uint16_$",
                                                        "typeString": "type(uint16)"
                                                    },
                                                    "typeName": {
                                                        "id": 102,
                                                        "name": "uint16",
                                                        "nodeType": "ElementaryTypeName",
                                                        "src": "2869:6:0",
                                                        "typeDescriptions": {}
                                                    }
                                                },
                                                "id": 105,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "kind": "typeConversion",
                                                "lValueRequested": false,
                                                "names": [],
                                                "nodeType": "FunctionCall",
                                                "src": "2869:20:0",
                                                "tryCall": false,
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_uint16",
                                                    "typeString": "uint16"
                                                }
                                            },
                                            {
                                                "id": 106,
                                                "name": "requestId",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 86,
                                                "src": "2891:9:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_bytes32",
                                                    "typeString": "bytes32"
                                                }
                                            }
                                        ],
                                        "expression": {
                                            "argumentTypes": [
                                                {
                                                    "typeIdentifier": "t_uint16",
                                                    "typeString": "uint16"
                                                },
                                                {
                                                    "typeIdentifier": "t_bytes32",
                                                    "typeString": "bytes32"
                                                }
                                            ],
                                            "expression": {
                                                "arguments": [
                                                    {
                                                        "id": 99,
                                                        "name": "factory",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 8,
                                                        "src": "2844:7:0",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_address",
                                                            "typeString": "address"
                                                        }
                                                    }
                                                ],
                                                "expression": {
                                                    "argumentTypes": [
                                                        {
                                                            "typeIdentifier": "t_address",
                                                            "typeString": "address"
                                                        }
                                                    ],
                                                    "id": 98,
                                                    "name": "WagerFactory",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 734,
                                                    "src": "2831:12:0",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_type$_t_contract$_WagerFactory_$734_$",
                                                        "typeString": "type(contract WagerFactory)"
                                                    }
                                                },
                                                "id": 100,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "kind": "typeConversion",
                                                "lValueRequested": false,
                                                "names": [],
                                                "nodeType": "FunctionCall",
                                                "src": "2831:21:0",
                                                "tryCall": false,
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_contract$_WagerFactory_$734",
                                                    "typeString": "contract WagerFactory"
                                                }
                                            },
                                            "id": 101,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "memberName": "setRandomNumber",
                                            "nodeType": "MemberAccess",
                                            "referencedDeclaration": 733,
                                            "src": "2831:37:0",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_function_external_nonpayable$_t_uint16_$_t_bytes32_$returns$__$",
                                                "typeString": "function (uint16,bytes32) external"
                                            }
                                        },
                                        "id": 107,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "2831:70:0",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_tuple$__$",
                                            "typeString": "tuple()"
                                        }
                                    },
                                    "id": 108,
                                    "nodeType": "ExpressionStatement",
                                    "src": "2831:70:0"
                                }
                            ]
                        },
                        "documentation": {
                            "id": 84,
                            "nodeType": "StructuredDocumentation",
                            "src": "2553:60:0",
                            "text": " Callback function used by VRF Coordinator"
                        },
                        "id": 110,
                        "implemented": true,
                        "kind": "function",
                        "modifiers": [],
                        "name": "fulfillRandomness",
                        "nodeType": "FunctionDefinition",
                        "overrides": {
                            "id": 90,
                            "nodeType": "OverrideSpecifier",
                            "overrides": [],
                            "src": "2693:8:0"
                        },
                        "parameters": {
                            "id": 89,
                            "nodeType": "ParameterList",
                            "parameters": [
                                {
                                    "constant": false,
                                    "id": 86,
                                    "mutability": "mutable",
                                    "name": "requestId",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 110,
                                    "src": "2645:17:0",
                                    "stateVariable": false,
                                    "storageLocation": "default",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_bytes32",
                                        "typeString": "bytes32"
                                    },
                                    "typeName": {
                                        "id": 85,
                                        "name": "bytes32",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "2645:7:0",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_bytes32",
                                            "typeString": "bytes32"
                                        }
                                    },
                                    "visibility": "internal"
                                },
                                {
                                    "constant": false,
                                    "id": 88,
                                    "mutability": "mutable",
                                    "name": "randomness",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 110,
                                    "src": "2664:18:0",
                                    "stateVariable": false,
                                    "storageLocation": "default",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                    },
                                    "typeName": {
                                        "id": 87,
                                        "name": "uint256",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "2664:7:0",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                        }
                                    },
                                    "visibility": "internal"
                                }
                            ],
                            "src": "2644:39:0"
                        },
                        "returnParameters": {
                            "id": 91,
                            "nodeType": "ParameterList",
                            "parameters": [],
                            "src": "2702:0:0"
                        },
                        "scope": 126,
                        "src": "2618:290:0",
                        "stateMutability": "nonpayable",
                        "virtual": false,
                        "visibility": "internal"
                    },
                    {
                        "body": {
                            "id": 124,
                            "nodeType": "Block",
                            "src": "3037:53:0",
                            "statements": [
                                {
                                    "expression": {
                                        "arguments": [
                                            {
                                                "arguments": [
                                                    {
                                                        "id": 120,
                                                        "name": "this",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 4294967268,
                                                        "src": "3077:4:0",
                                                        "typeDescriptions": {
                                                            "typeIdentifier": "t_contract$_RandomNumberConsumer_$126",
                                                            "typeString": "contract RandomNumberConsumer"
                                                        }
                                                    }
                                                ],
                                                "expression": {
                                                    "argumentTypes": [
                                                        {
                                                            "typeIdentifier": "t_contract$_RandomNumberConsumer_$126",
                                                            "typeString": "contract RandomNumberConsumer"
                                                        }
                                                    ],
                                                    "id": 119,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": true,
                                                    "lValueRequested": false,
                                                    "nodeType": "ElementaryTypeNameExpression",
                                                    "src": "3069:7:0",
                                                    "typeDescriptions": {
                                                        "typeIdentifier": "t_type$_t_address_$",
                                                        "typeString": "type(address)"
                                                    },
                                                    "typeName": {
                                                        "id": 118,
                                                        "name": "address",
                                                        "nodeType": "ElementaryTypeName",
                                                        "src": "3069:7:0",
                                                        "typeDescriptions": {}
                                                    }
                                                },
                                                "id": 121,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "kind": "typeConversion",
                                                "lValueRequested": false,
                                                "names": [],
                                                "nodeType": "FunctionCall",
                                                "src": "3069:13:0",
                                                "tryCall": false,
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                }
                                            }
                                        ],
                                        "expression": {
                                            "argumentTypes": [
                                                {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                }
                                            ],
                                            "expression": {
                                                "id": 116,
                                                "name": "LINK",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 806,
                                                "src": "3054:4:0",
                                                "typeDescriptions": {
                                                    "typeIdentifier": "t_contract$_LinkTokenInterface_$998",
                                                    "typeString": "contract LinkTokenInterface"
                                                }
                                            },
                                            "id": 117,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "memberName": "balanceOf",
                                            "nodeType": "MemberAccess",
                                            "referencedDeclaration": 930,
                                            "src": "3054:14:0",
                                            "typeDescriptions": {
                                                "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                                                "typeString": "function (address) view external returns (uint256)"
                                            }
                                        },
                                        "id": 122,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "3054:29:0",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                        }
                                    },
                                    "functionReturnParameters": 115,
                                    "id": 123,
                                    "nodeType": "Return",
                                    "src": "3047:36:0"
                                }
                            ]
                        },
                        "documentation": {
                            "id": 111,
                            "nodeType": "StructuredDocumentation",
                            "src": "2914:54:0",
                            "text": " @return amount of LINK contract has"
                        },
                        "functionSelector": "4915c240",
                        "id": 125,
                        "implemented": true,
                        "kind": "function",
                        "modifiers": [],
                        "name": "getAmountOfLink",
                        "nodeType": "FunctionDefinition",
                        "parameters": {
                            "id": 112,
                            "nodeType": "ParameterList",
                            "parameters": [],
                            "src": "2997:2:0"
                        },
                        "returnParameters": {
                            "id": 115,
                            "nodeType": "ParameterList",
                            "parameters": [
                                {
                                    "constant": false,
                                    "id": 114,
                                    "mutability": "mutable",
                                    "name": "amount",
                                    "nodeType": "VariableDeclaration",
                                    "scope": 125,
                                    "src": "3021:14:0",
                                    "stateVariable": false,
                                    "storageLocation": "default",
                                    "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                    },
                                    "typeName": {
                                        "id": 113,
                                        "name": "uint256",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "3021:7:0",
                                        "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                        }
                                    },
                                    "visibility": "internal"
                                }
                            ],
                            "src": "3020:16:0"
                        },
                        "scope": 126,
                        "src": "2973:117:0",
                        "stateMutability": "view",
                        "virtual": false,
                        "visibility": "public"
                    }
                ],
                "scope": 127,
                "src": "271:2821:0"
            }
        ],
        "src": "32:3060:0"
    },
    "functionHashes": {
        "factory()": "c45a0155",
        "getAmountOfLink()": "4915c240",
        "getRandomNumber(uint256)": "b37217a4",
        "randomResult()": "42619f66",
        "rawFulfillRandomness(bytes32,uint256)": "94985ddd"
    },
    "gasEstimates": {
        "creation": {
            "codeDepositCost": "386600",
            "executionCost": "infinite",
            "totalCost": "infinite"
        },
        "external": {
            "factory()": "1136",
            "getAmountOfLink()": "infinite",
            "getRandomNumber(uint256)": "infinite",
            "randomResult()": "1006",
            "rawFulfillRandomness(bytes32,uint256)": "infinite"
        },
        "internal": {
            "fulfillRandomness(bytes32,uint256)": "infinite"
        }
    }
}
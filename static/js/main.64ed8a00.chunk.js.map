{"version":3,"sources":["components/WagerCard.js","pages/Splash.js","App.js","index.js"],"names":["useStyles","makeStyles","root","minWidth","margin","textAlign","backgroundColor","border","WagerCard","props","classes","Card","elevation","className","CardContent","Typography","color","gutterBottom","amount","wagererAddress","address","dateCreated","dateExpires","CardActions","Button","size","variant","main","justifyContent","minHeight","marginTop","button","height","width","textField","fontWeight","actionContainer","marginBottom","wagersContainer","Splash","useState","wagerAmount","setWagerAmount","wagersData","setWagersData","a","window","ethereum","wagerData","contractAddress","contractDuration","contractCreated","dayjs","format","contractExpires","add","Container","maxWidth","Grid","container","spacing","justify","item","xs","style","borderBottom","padding","TextField","label","InputProps","startAdornment","InputAdornment","position","value","onChange","e","target","onClick","map","wager","theme","createMuiTheme","palette","type","background","default","App","CssBaseline","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.64ed8a00.chunk.js","sourcesContent":["import {\n    makeStyles,\n    Card,\n    CardActions,\n    CardContent,\n    Button,\n    Typography\n} from '@material-ui/core';\n\nconst useStyles = makeStyles({\n    root: {\n        minWidth: 275,\n        margin: 8,\n        textAlign: \"left\",\n        backgroundColor: \"#1e273c\",\n        border: `1px solid #d81b60`,\n    },\n});\n\nconst WagerCard = (props) => {\n    const classes = useStyles();\n\n    return (\n        <Card elevation={10} className={classes.root}>\n            <CardContent>\n                <Typography color=\"subtitle\" gutterBottom>\n                    Amount: ETH {props.amount}\n                </Typography>\n                <Typography color=\"textPrimary\" gutterBottom>\n                    Wager Address: {props.wagererAddress}\n                </Typography>\n                <Typography color=\"textPrimary\" gutterBottom>\n                    Wagerer: {props.address}\n                </Typography>\n                <Typography color=\"textPrimary\" gutterBottom>\n                    Created: {props.dateCreated}\n                </Typography>\n                <Typography color=\"textPrimary\" gutterBottom>\n                    Expires: {props.dateExpires}\n                </Typography>\n            </CardContent>\n            <CardActions>\n                <Button size=\"large\" variant=\"outlined\">Match Wager</Button>\n            </CardActions>\n        </Card>\n    );\n}\n\nexport default WagerCard;","import { useState } from \"react\";\nimport { ethers } from \"ethers\";\nimport WagerStore from \"../artifacts/contracts/WagerStore.sol/WagerStore.json\";\nimport {\n    Container,\n    Typography,\n    TextField,\n    Grid,\n    Button,\n    makeStyles,\n    InputAdornment,\n} from \"@material-ui/core\";\nimport dayjs from \"dayjs\";\nimport WagerCard from \"../components/WagerCard\";\n\nconst useStyles = makeStyles({\n    main: {\n        justifyContent: \"center\",\n        textAlign: \"center\",\n        minHeight: \"90vh\",\n        marginTop: 36,\n    },\n    button: {\n        color: \"white\",\n        height: 58,\n        width: 250,\n        marginTop: 16,\n    },\n    textField: {\n        fontWeight: 500,\n        width: 250,\n    },\n    actionContainer: {\n        marginTop: 36,\n        marginBottom: 36\n    },\n    wagersContainer: {\n        margin: 1,\n        width: 16,\n        height: 16,\n    }\n});\n\n// Address contract(s) was/were deployed to via $ npx hardhat run scripts/deploy.js {network}\nconst wagerStoreAddress = \"0x38E88FFcfC3f921cf98002D39840A5B3C5d3a961\";\n\n// Description text for 2X\nconst description = \"Wager ether that can be matched by anyone in a winner-take-all 1v1\"\n\nconst Splash = (props) => {\n    const classes = useStyles();\n\n    /* Wager state variables */\n    const [wagerAmount, setWagerAmount] = useState(0);\n    const [wagersData, setWagersData] = useState([]);\n\n    /* request access to the user's MetaMask account */\n    async function requestAccount() {\n        await window.ethereum.request({ method: \"eth_requestAccounts\" });\n    }\n\n    /* Deploy new wager contract */\n    async function createWager() {\n        if (typeof window.ethereum !== 'undefined') {\n            // await requestAccount();\n            // const provider = new ethers.providers.Web3Provider(window.ethereum);\n            // const signer = provider.getSigner();\n            // const contract = new ethers.Contract(wagerStoreAddress, WagerStore.abi, signer);\n            // const transaction = await contract.createWagerContract();\n\n            /* Create object to represent wager information */\n            const wagerData = {\n                wagererAddress: \"transaction\",\n                contractAddress: \"transaction\",\n                wagerAmount: wagerAmount,\n                contractDuration: 600, // Code change: currently unused\n                contractCreated: dayjs().format(\"YYYY-MM-DD HH:mm:ss\"),\n                contractExpires: dayjs().add(10, 'minute').format(\"YYYY-MM-DD HH:mm:ss\")\n            };\n            setWagersData([...wagersData, wagerData]);\n        }\n    }\n\n    return (\n        <Container maxWidth=\"md\">\n            <div className={classes.main}>\n                <Grid container spacing={4} justify=\"center\">\n                    <Grid item xs={12}>\n                        <Typography variant=\"h1\" color=\"secondary\">2X</Typography>\n                        <Typography variant=\"overline\">{description}</Typography>\n                        <Typography style={{ borderBottom: '0.1rem solid white', padding: '0.5em' }}></Typography>\n                    </Grid>\n                    <div className={classes.actionContainer}>\n                        <Grid item xs={12}>\n                            <TextField\n                                label=\"Amount\"\n                                variant=\"filled\"\n                                color=\"secondary\"\n                                className={classes.textField}\n                                InputProps={{\n                                    startAdornment: <InputAdornment position=\"start\">ETH</InputAdornment>,\n                                }}\n                                value={wagerAmount}\n                                onChange={(e) => {\n                                    setWagerAmount(e.target.value) //^[0-9]*$ use regex to only allow 0-9 and \".\"\n                                }}\n                            />\n                        </Grid>\n                        <Grid item xs={12}>\n                            <Button\n                                className={classes.button}\n                                variant=\"outlined\"\n                                color=\"secondary\"\n                                onClick={createWager}>\n                                Make Wager\n                            </Button>\n                        </Grid>\n                    </div>\n                    <Grid item xs={12}>\n                        <Typography variant=\"h5\">Open Wagers</Typography>\n                    </Grid>\n                    <Grid container spacing={36} justify=\"center\">\n                        {wagersData.map(wager => {\n                            return (\n                                <WagerCard\n                                    wagererAddress={wager.wagererAddress}\n                                    address={wager.contractAddress}\n                                    amount={wager.wagerAmount}\n                                    dateCreated={wager.contractCreated}\n                                    dateExpires={wager.contractExpires} />\n                            )\n                        })}\n                    </Grid>\n                </Grid>\n            </div>\n        </Container>\n    );\n}\n\nexport default Splash;","import {\n  CssBaseline,\n  MuiThemeProvider,\n  createMuiTheme\n} from '@material-ui/core';\nimport Splash from './pages/Splash';\n\nconst theme = createMuiTheme({\n  palette: {\n    type: \"dark\",\n    background: {\n      default: \"#081229\"\n    }\n  }\n});\n\nconst App = () => {\n  return (\n    <MuiThemeProvider theme={theme}>\n      <CssBaseline />\n      <Splash />\n    </MuiThemeProvider>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}